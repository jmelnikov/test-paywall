services:
  nginx:
    image: nginx:latest
    volumes:
      - ../app:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/var/log/nginx
    container_name: ${PROJECT_NAME}-nginx
    restart: always
    depends_on:
      - app
    ports:
      - "8088:80"

  app:
    build:
      context: ./app
    volumes:
      - ../app:/var/www
      - ./app/php.ini:/usr/local/etc/php/conf.d/php.ini
    container_name: ${PROJECT_NAME}-app
    restart: always
    command: >
      sh -c "composer install &&
             php bin/console doctrine:migrations:migrate --no-interaction &&
             php-fpm"

  worker:
    build:
      context: ./app
    volumes:
      - ../app:/var/www
      - ./app/php.ini:/usr/local/etc/php/conf.d/php.ini
    container_name: ${PROJECT_NAME}-worker
    restart: always
    depends_on:
      - redis
      - mysql
      - app
    # Запускаем команду для обработки сообщений из очереди с тайм-лимитом в 1 час.
    # Это нужно для того, чтобы процесс не съедал слишком много памяти и не умирал.
    command: >
      sh -c "php bin/console messenger:consume telegram_notifications --time-limit=3600"

  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}-mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  redis:
    image: redis:latest
    container_name: ${PROJECT_NAME}-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
